---
interface Props {
    titulo: string;
    not_found: string;
    more: string;
    num_movements: number;
}

const { titulo, not_found, more, num_movements } = Astro.props;
---

<span
    class="relative flex justify-start flex-col gap-3 gap-x-5 w-full p-7 rounded-xl cursor-pointer bg-slate-800 shadow-lg shadow-gray-900 transition-all duration-150 ease-in hover:scale-105"
    id="card_movements"
>
    <div class="flex w-full justify-between items-center">
        <h1 class="text-white font-bold">
            {titulo}
        </h1>

        <span class="transition-all duration-150 ease-in hover:scale-125">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="white"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-dots"
            >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M5 12m-1 0a1 1 0 1 0 2 0a 1 0 1 0 -2 0"></path>
                <path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path>
                <path d="M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"></path>
            </svg>
        </span>
    </div>

    <div class="flex flex-col gap-y-1 justify-center items-start w-full">
        {
            num_movements > 0 ? (
                <div
                    id="slot_card"
                    class="flex flex-col w-full gap-4 pr-3 pb-10"
                >
                    <slot />

                    <button
                        id="showMovements"
                        class="text-white text-sm font-bold text-right hover:text-blue-500 absolute bottom-5 right-7"
                    >
                        {more}...
                    </button>
                </div>
            ) : (
                <span class="text-gray-300">{not_found}</span>
            )
        }
    </div>
</span>
<section
    id="showMore"
    class="bg-black/50 fixed top-0 left-0 h-full w-full z-50 flex"
>
    <article id="close" class="w-3/4 cursor-pointer"></article>
    <article id="content" class="bg-slate-800 shadow-lg shadow-gray-900 w-3/12 p-5 flex flex-col gap-4">
        <header
            class="flex justify-between items-center p-4 border-b-2 border-blue-500"
        >
            <h1 class="text-2xl">Historial de Movimientos</h1>
            <i id="extras" class="">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="icon icon-tabler icons-tabler-outline icon-tabler-dots-vertical">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none"
                    ></path><path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"
                    ></path><path d="M12 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"
                    ></path><path d="M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0"
                    ></path></svg
                >
            </i>
        </header>

        <main id="contentMovements" class="flex flex-col gap-3">
            <article
                id="movement"
                class="flex justify-around px-0 py-4 items-center rounded-lg bg-blue-600 shadow-lg"
            >
                <div id="logo">
                    <img
                        class="size-12"
                        src="https://img.icons8.com/?size=256&id=eYaVJ9Nbqqbw&format=png"
                        alt=""
                    />
                </div>
                <div id="data" class="text-center">
                    <h3 class="text-xl">Transferencia</h3>
                    <i id="date" class="text-sm">20/20/2024</i>
                </div>
                <div id="count">
                    <p id="countNum" class="font-extrabold text-green-300">+ 1.000.000 $</p>
                </div>
            </article>
        </main>
    </article>
</section>

<script>
    let showMovements = document.querySelector(
        "#showMovements",
    ) as HTMLButtonElement;
    let close = document.getElementById("close") as HTMLElement;
    showMovements.addEventListener("click", () => {
        let movements = document.querySelector("#showMore") as HTMLElement;
        if (window.getComputedStyle(movements).display == "none") {
            movements.style.display = "flex";
        } else {
            movements.style.display = "none";
        }
    });

    close.addEventListener("click", () => {
        let movements = document.querySelector("#showMore") as HTMLElement;
        if (window.getComputedStyle(movements).display == "flex") {
            movements.style.display = "none";
        } else {
            movements.style.display = "flex";
        }
    });
</script>

<style>
    

    .custom-scroll::-webkit-scrollbar {
        width: 5px;
    }

    .custom-scroll::-webkit-scrollbar-track {
        background: rgb(255, 255, 255, 0);
        border-radius: 30px;
    }

    .custom-scroll::-webkit-scrollbar-thumb {
        background: #777;
        border-radius: 30px;
    }

    .custom-scroll::-webkit-scrollbar-thumb:hover {
        background: rgb(255, 255, 255, 0);
        border-radius: 30px;
    }

    @media (max-width: 1160px) {
        #card_movements {
            grid-column: span 2 / 2 span;
        }
    }

    @media (max-width: 1024px) {
        #card_movements {
            grid-column: span 4 / 4 span;
            grid-row: span 1 / 1 span;
        }
    }

    #showMore {
        display: none;
    }

    #content {
        animation: desplace 0.5s ease forwards;
    }

    @media (max-width: 1024px) {
        #close {
            width: 40%;
        }
        #content {
            width: 60%;
            animation: desplace 0.5s ease forwards;
        }

        #contentMovements #movement {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
    }

    @media (max-width: 1560px) {
        #close {
            width: 60%;
        }
        #content {
            width: 40%;
            animation: desplace 0.5s ease forwards;
        }

        #contentMovements #movement {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
    }

    @media (max-width: 900px) {
        #close {
            width: 40%;
        }
        #content {
            width: 60%;
            animation: desplace 0.5s ease forwards;
        }

        #contentMovements #movement {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
    }

    @keyframes desplace {
        0% {
            transform: translateX(100%);
        }
        100% {
            transform: translateX(0);
        }
    }
</style>
